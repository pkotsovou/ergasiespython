import random

def is_empty(cord, table): #ελεγχει αν ενα τετραγωνο ειναι αδειο
    empty = True
    for y in table:
        if cord[0] == y[0] and (cord[1] == y[1]):
            empty = False
    return empty

def is_same_size(cord, table): #ελεγχει αν υπαρχει δακτύλιος του ίδιου μεγέθους
    same_size = False
    for y in table:
        if cord[2] == y[2] and (y[0] == cord[0]) and (cord[1] == y[1]):
            same_size = True
    return same_size

m = 0 #μετρητής βημάτων του παιχνιδιού

for i in range (100):
    cord = []  #λιστα με συντεταγμενες πινακα και μεγεθος δακτυλιων
    table = [] #λιστα που θα μπαινουν οι δακτ μετα τον ελεγχο

    #μετρητες που τους χρησιμοποιω για να βρω αν θα σχηματιστει καποια τριαδα απο δακτυλιους
    s00,m00,l00 = (0,0,0) #μετρητες πρωτου τετραγωνου [0,0] ανα μεγεθος δακτυλιου (small->medium->large)
    s01,m01,l01 = (0,0,0) #μετρητες τετραγωνου [0,1] ανα μεγεθος δακτυλιου (small->medium->large)
    s02,m02,l02 = (0,0,0) #μετρητες τετραγωνου [0,2] ανα μεγεθος δακτυλιου (small->medium->large)

    s10,m10,l10 = (0,0,0) #μετρητες τετραγωνου [1,0] ανα μεγεθος δακτυλιου (small->medium->large)
    s11,m11,l11 = (0,0,0) #μετρητες τετραγωνου [1,1] ανα μεγεθος δακτυλιου (small->medium->large)
    s12,m12,l12 = (0,0,0) #μετρητες τετραγωνου [1,2] ανα μεγεθος δακτυλιου (small->medium->large)

    s20,m20,l20 = (0,0,0) #μετρητες τετραγωνου [2,0] ανα μεγεθος δακτυλιου (small->medium->large)
    s21,m21,l21 = (0,0,0) #μετρητες τετραγωνου [2,1] ανα μεγεθος δακτυλιου (small->medium->large)
    s22,m22,l22 = (0,0,0) #μετρητες τετραγωνου [2,2] ανα μεγεθος δακτυλιου (small->medium->large)

    win = False
    while win == False:
        size = random.randint(1,3) #τυχαια επιλογη μεγεθους δακτυλιου

        rows = random.randint(0,2) #τυχαια επιλογη σειρας
        cols = random.randint(0,2) #τυχαια επιλογη στηλης
        cord = [rows,cols] #βαζω στην λιστα cord τις τυχαιες συντεταγμενες του τετραγωνου

        cord.append(size) #τωρα η λιστα εχει τις συντεταγμενες του τετραγωνου κ το μεγεθος του δακτυλιου

        #ελεγχος για προσθηκη του δακτυλιου στο τετραγωνο αν αυτο ειναι αδειο κ δεν υπαρχει δακτυλιος του ιδιου μεγεθους
        if (is_empty(cord, table) == True) or (is_empty(cord, table) == False and (is_same_size(cord, table) == False)):
            table.append(cord)
            m = m + 1 #μετρητης βηματων

            #ελεγχος για νικη μετα την προσθηκη καθε φορα ενος νεου δακτυλιου στο table
            for y in range(0,3):
                 if table[-1][0:2] == [0,y]: #αν ο δακτυλιος που μπηκε βρισκεται στην πρωτη γραμμη

                    if y==0: # αν ειναι στο τετραγωνο [0,0]
                        if table[-1][2] == 1: #αν ειναι μεγεθους 1 δηλαδη small
                            s00 = s00 + 1
                        if table[-1][2] == 2: #αν ειναι μεγεθους 2 δηλαδη medium
                            m00 = m00 + 1
                        if table[-1][2] == 3: #αν ειναι μεγεθους 3 δηλαδη large
                            l00 = l00 + 1

                    if y==1: #αν ειναι στο τετραγωνο [0,1]
                        if table[-1][2] == 1: #αν ειναι μεγεθους 1 δηλ. small
                            s01 = s01 + 1
                        if table[-1][2] == 2: #αν ειναι μεγεθους 2 δηλ. medium
                            m01 = m01 + 1
                        if table[-1][2] == 3: #αν ειναι μεγεθους 3 δηλ. large
                            l01 = l01 + 1

                    if y==2: #αν ειναι στο τετραγωνο [0,2]
                        if table[-1][2] == 1: #αν ειναι μεγεθους 1 δηλ. small
                            s02 = s02 + 1
                        if table[-1][2] == 2: #αν ειναι μεγεθους 2 δηλ. medium
                            m02 = m02 + 1
                        if table[-1][2] == 3: #αν ειναι μεγεθους 3 δηλ. large
                            l02 = l02 + 1

            for y in range(0,3):
                 if table[-1][0:2] == [1,y]: #αν ο δακτυλιος που μπηκε βρισκεται στην δευτερη γραμμη

                    if y==0: #αν ειναι στο τετραγωνο [1,0]
                        if table[-1][2] == 1: #αν ειναι μεγεθους 1 δηλ. small
                            s10 = s10 + 1
                        if table[-1][2] == 2: #αν ειναι μεγεθους 2 δηλ. medium
                            m10 = m10 + 1
                        if table[-1][2] == 3: #αν ειναι μεγεθους 3 δηλ. large
                            l10 = l10 + 1

                    if y==1: #αν ειναι στο τετραγωνο [1,1]
                        if table[-1][2] == 1: #αν ειναι μεγεθους 1 δηλ. small
                            s11 = s11 + 1
                        if table[-1][2] == 2: #αν ειναι μεγεθους 2 δηλ. medium
                            m11 = m11 + 1
                        if table[-1][2] == 3: #αν ειναι μεγεθους 3 δηλ. large
                            l11 = l11 + 1

                    if y==2: #αν ειναι στο τετραγωνο [1,2]
                        if table[-1][2] == 1: #αν ειναι μεγεθους 1 δηλ. small
                            s12 = s12 + 1
                        if table[-1][2] == 2: #αν ειναι μεγεθους 2 δηλ. medium
                            m12 = m12 + 1
                        if table[-1][2] == 3: #αν ειναι μεγεθους 3 δηλ. large
                            l12 = l12 + 1

            for y in range(0,3):
                 if table[-1][0:2] == [2,y]: #αν ο δακτυλιος που μπηκε βρισκεται στην τριτη γραμμη

                    if y==0: #αν ειναι στο τετραγωνο [2,0]
                        if table[-1][2] == 1: #αν ειναι μεγεθους 1 δηλ. small
                            s20 = s20 + 1
                        if table[-1][2] == 2: #αν ειναι μεγεθους 2 δηλ. medium
                            m20 = m20 + 1
                        if table[-1][2] == 3: #αν ειναι μεγεθους 3 δηλ. large
                            l20 = l20 + 1

                    if y==1: #αν ειναι στο τετραγωνο [2,1]
                        if table[-1][2] == 1: #αν ειναι μεγεθους 1 δηλ. small
                            s21 = s21 + 1
                        if table[-1][2] == 2: #αν ειναι μεγεθους 2 δηλ. medium
                            m21 = m21 + 1
                        if table[-1][2] == 3: #αν ειναι μεγεθους 3 δηλ. large
                            l21 = l21 + 1

                    if y==2: #αν ειναι στο τετραγωνο [2,2]
                        if table[-1][2] == 1: #αν ειναι μεγεθους 1 δηλ. small
                            s22 = s22 + 1
                        if table[-1][2] == 2: #αν ειναι μεγεθους 2 δηλ. medium
                            m22 = m22 + 1
                        if table[-1][2] == 3: #αν ειναι μεγεθους 3 δηλ. large
                            l22 = l22 + 1

            #ελεγχος για νικη στις σειρες
            if (s00==s01==s02==1) or (m00==m01==m02==1) or (l00==l01==l02==1) or \
                    (s00==m01==l02==1) or (s10==s11==s12==1) or (m10==m11==m12==1) or \
                    (l10==l11==l12==1) or (s10==m11==l12==1) or (s20==s21==s22==1) or \
                    (m20==m21==m22==1) or (l20==l21==l22==1) or (s20==m21==l22==1):
                win = True
            #ελεγχος για νικη στις στηλες
            if (s00==s10==s20==1) or (m00==m10==m20==1) or (l00==l10==l20==1) or \
                    (s00==m10==l20==1) or (s01==s11==s21==1) or (m01==m11==m21==1) or \
                    (l01==l11==l21==1) or (s01==m11==l21==1) or (s02==s12==s22==1) or \
                    (m02==m12==m22==1) or (l02==l12==l22==1) or (s02==m12==l22==1):
                win = True
            #ελεγχος για νικη στις διαγωνιες
            if (s00==s11==s22==1) or (m00==m11==m22==1) or (l00==l11==l22==1) or \
                    (s00==m11==l22==1) or (s02==s11==s20==1) or (m02==m11==m20==1) or \
                    (l02==l11==l20==1) or (s02==m11==l20==1):
                win = True

mo = m//100 #υπολογισμος ακεραιου μεσου ορου βηματων για τα 100 παιχνιδια
print(mo)
